<?xml version="1.0" encoding="utf-8"?> <!DOCTYPE article PUBLIC
"-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[]>
<?xml-stylesheet type="text/css" href="css/style.css"?>

<article lang="en">
  <articleinfo>
    <title>
      PAWAP: Process Aware Web Application Platform
    </title>

    <titleabbrev>PAWAP</titleabbrev>

    <subtitle>Description, Development and Deployment</subtitle>

    <pubdate>
      2012-11-23
    </pubdate>

    <authorgroup>
      <author>
	<firstname>Bj√∂rn</firstname>
	<surname>Molin</surname>
	<affiliation>
	  <orgname>Inherit S AB</orgname>
	</affiliation>
      </author>

      <author>
	<firstname>Roland</firstname>
	<surname>Hedayat</surname>
	<affiliation>
	  <orgname>Inherit S AB</orgname>
	</affiliation>
      </author>
    </authorgroup>
  </articleinfo>

  <abstract>
    <title>Abstract</title>
    <para>
      This document describes PAWAP (Even if this is a palindrome, we are in
      search of a more catching name... suggestions are welcome) &mdash; a
      <emphasis>Process-Aware Web Application Platform</emphasis>. The
      platform is an assembly and integration of several open source software
      products and components. It is designed to facilitate the creation of
      <emphasis>Business process driven</emphasis> web applications, that is,
      the class of applications that are <emphasis>driven by the instantiation
      and execution of an underlying "executable business process"</emphasis>.
    </para>

    <para>
      A driving idea behind the plaform design has been the principle of
      "separation of concerns". We describe how this principle has motivated
      the creation of the platform itself, and how it has affected the main
      underlying design principles.
    </para>

    <para>
      We present an overview of the functionality and features of the platform
      and its architectural composition.  Furthermore, the document provides
      Appendices with detailed instructions for setting up the development
      environment and for the deployment of the platform to a suitable
      production environment.
    </para>
  </abstract>
  
  <?custom-pagebreak?>

  <section id="s.intro">
    <title>Introduction</title>
    <para>
      The <emphasis>Process-Aware Web Application Platform</emphasis>, PAWAP,
      provides the integration of a set of open source software products and
      tools to facilitate the construction of "<emphasis>business
      process-aware</emphasis>" web applications, that is, applications using
      the services of a <emphasis>business process engine</emphasis> to
      coordinate multi user work at multiple locations.
    </para>
    
    <para>
      This document explains the ideas which have guided the design of PAWAP,
      its inner workings as well as its setup and configuration.
    </para>

    <para>
      In order to explain the term <emphasis>"process-aware"</emphasis>, we
      first define the terms "Business Process", "Business Process Model" and
      "Executable Business Process".
    </para>

    <para>
      A Business Process is a collaborative effort by participants wihthin an
      organisation, aiming at satisfying a particular goal. The "operands" of
      the effort are resources within the organisation, either immaterial
      (data/information) or material.
    </para>

    <para>
      The collaborative effort can be partitioned into a set of tasks. This
      subdivision might be iterated down to an arbitray level, guided by
      experience and common sense. The various tasks are performed by various
      <emphasis>actors</emphasis>. An actor can be a person or a group of
      persons, or it can be an <emphasis>automaton</emphasis> (e.g. a computer
      or a robot). If the actor is an automaton, the task is called an
      automatic task or a service task. Otherwise it is called a manual task.
      The rules for assigning the actors to the task is part of the business
      process, and determined by the task itself, and by rules determined by
      the organisation structure.
    </para>

    <para>
      In order to understand a complex phenomenon, we humans tend to break it
      down into parts (<emphasis>analysis</emphasis>), and then build it up
      again (<emphasis>synthesis</emphasis>).  Since a business process is not
      a tangible phenomenon which we can build in itself, we can only build a
      representation of it &mdash; a <emphasis>model</emphasis>.
    </para>

    <para>
      Business Process Modeling is the activity of identifying, analysing and
      creating representations of processes of an enterprise.  The aim of this
      activity is to better understand the processes of the organisation in
      order to improve their quality and efficiency.
    </para>

    <para>
      If the modeling is performed using a <emphasis>dedicated formal process
      modeling language</emphasis> which can be translated into a form
      suitable for computer execution, we can make the business processes
      "executable".  To execute the model implies, informally stated, to
      deploy the executable process model on a computer system, and start an
      execution of it. The execution identifies the correct ordering of the
      tasks to be performed, and assigns each task to the adequate actor,
      whether a human participant, or a computer.
    </para>

    <para>
      Thus, we have a round trip in the analysis/modeling/execution cycle:
      First we study the reality (the existing process), we create an adequate
      "copy" of it (the executable model) and finally we apply that model to a
      computer to "force" the "real" process to perform like the model.
    </para>

    <para>
      A web application is <emphasis>business process-aware</emphasis> if
      there is an underlying software component &mdash; a <emphasis>Business
      Process Engine</emphasis> &mdash; which supports a business process by
      ensuring that it conforms to the process model. It performs (amongst
      others), the following services to the web application:
    </para>

    <itemizedlist id="il.process-engine-services">
      <title>Process Engine: Services</title>
      <listitem>
	<para>
	  Determination of the current task list
	</para>

	<para>
	  The process engine provides information about which tasks that might
	  be started. If there is more than one task, this means that there is
	  no particular ordering among them, they might be executed in
	  parallel.
	</para>
      </listitem>

      <listitem>
	<para>
	  Actor selection
	</para>

	<para>
	  Assignment of candidate actors to the task(s), according to business
	  rules
	</para>
      </listitem>

      <listitem>
	<para>
	  Task Synchronisation
	</para>

	<para>
	  Coordinating tasks by waiting for particular tasks to complete
	  before proceeding to other tasks within the process process
	</para>
      </listitem>

      <listitem>
	<para>
	  Task scheduling
	</para>

	<para>
	  Starting tasks at a given time
	</para>
      </listitem>
    </itemizedlist>

    <para>
      In the next section, we describe the central principles which have
      governed the system architecture, and some essential requirements
      derived from these principles. We describe the choice of components, and
      provide an overview of the system.
    </para>
  </section>

  <section id="s.pawap.overview">
    <title>System Overview</title>
    <!--=================================================================
	Architectural pattern, 
	forms engine, 
	webapp toolkit,
	content repository,
	separation of concerns,
	navigational interactions,
	process-based interactions,
	data input interactions,
	=====================================================================-->
    <section id="s.pawap.design-principles">
      <title>Design Principles</title>
      <para>
	In designing PAWAP, we have strived to follow the architectural
	principles of <xref linkend="gle.separation-of-concerns"/> and <xref
	linkend="gle.loose-coupling"/>. Together these principles promote the
	creation of a modular system, a highly desirable property in that it:
      </para>

      <itemizedlist>
	<listitem>
	  <para>
	    Simplifies system maintenance
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Enables the choice of "best of breed" components
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Substitutability: Reduces lock-in to a particular component/product
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Simplifies integration with other components/products
	  </para>
	</listitem>
      </itemizedlist>
    </section>

    <section id="s.pawap.requirements">
      <title>Non Functional Requirements</title>
      <para>
	We here postulate some non functional requirements at the highermost
	level. They apply to the external open source components and products
	as well as the components that are built internally as part of the
	platform.
      </para>

      <section id="s.pawap.requirements.openstd">
	<title>Open Standards</title>
	<para>
	  The external and internal software components shall be based on, or
	  use relevant <ulink url="http://opensource.org/osr">Open</ulink>
	  Standards.
	</para>
	<para>
	  The term "standard" is often used as synonym for "common", or
	  "frequently used", often referring to closed, proprietary software.
	  Since the whole point of establishing a "standard" is
	  interoperability, it is important to ensure that the relevant
	  standards are also <emphasis>open</emphasis>, and not discriminatory
	  towards open source software, as <ulink
	  url="http://opensource.org/osr">defined</ulink> by <xref
	  linkend="gle.osi"/>.
	</para>
      </section>

      <section id="s.pawap.requirements.oss">
	<title>Open Source</title>
	<para>
	  PAWAP shall be and remain an "<emphasis>true open source</emphasis>"
	  platform. All the external software must be licensed under an open
	  source licence as defined by <xref linkend="gle.osi"/>. The internal
	  software will be licensed under <xref linkend="gle.agpl"/>, an
	  open source licence as defined by <xref linkend="gle.gnu"/>. The
	  external software products/components are licensed under <xref
	  linkend="gle.gplv2"/>, <xref linkend="gle.lgplv2"/> and
	  <xref linkend="gle.alv2"/> licenses.
	</para>

	<para>
	  The reasons for this choice are the following:
	</para>

	<itemizedlist>
	  <listitem>
	    <para>
	      Proven, efficient development paradigm
	    </para>
	  </listitem>

	  <listitem>
	    <para>
	      Reduces integration effort
	    </para>
	  </listitem>

	  <listitem>
	    <para>
	      Public sector friendly
	    </para>
	  </listitem>

	  <listitem>
	    <para>
	      Accelerated development through community building and re-use
	    </para>
	  </listitem>
	</itemizedlist>
      </section>

      <section id="s.pawap.requirements.arch">
	<title>Modular Architecture, Exposed API</title>
	<para>
	  For the same reasons as presented in <xref
	  linkend="s.pawap.design-principles"/>, it is desirable that the
	  external software itself is modular, with sound and comprehensive
	  open API's according to good practices.
	</para>
      </section>

      <section id="s.pawap.requirements.mature">
	<title>Mature, High Quality Products with Active Communities</title>
	<para>
	  We want the PAWAP itself to be Enterprise-grade and to become widely
	  used and with an active community. It must then possess properties
	  such as quality, scaleability and stability. It is necessary to
	  expect the same from the included external software. In addition to
	  the requirements listed above, we favour the following properties
	  from our dependent, external software:
	</para>

	<itemizedlist>
	  <listitem>
	    <para>
	      Quality (Documentation, release procedures etc.)
	    </para>
	  </listitem>

	  <listitem>
	    <para>
	      Scaleability
	    </para>
	  </listitem>

	  <listitem>
	    <para>
	      Stability, Maturity
	    </para>
	  </listitem>

	  <listitem>
	    <para>
	      Active User Community (Mailing lists, Fora, Wikis)
	    </para>
	  </listitem>
	</itemizedlist>
      </section>
    </section>

    <section id="s.pawap.parts">
      <title>The Parts, Requirements and Chosen Components</title>
      <para>
	So, which are the "concerns" of a "Process Aware Web Application
	Platform"? We need:
      </para>

      <itemizedlist>
	<listitem>
	  <para>
	    An Executable Process Engine
	  </para>
	</listitem>

	<listitem>
	  <para>
	    A flexible and highly configurable web application framework
	  </para>
	</listitem>

	<listitem>
	  <para>
	    "Best of Breed" Forms Engine
	  </para>
	</listitem>
      </itemizedlist>

      <section id="s.pawap.overview.bonita">
	<title>Executable Business Process Engine</title>

	<para>
	  As the name suggests, we need the functionality enabling "process
	  awareness" by performing the services as described in <xref
	  linkend="il.process-engine-services"/>. This component must expose
	  comprehensive API's, be robust, performant, scaleable and
	  standards compliant.
	</para>

	<para>
	  We have chosen <ulink url="http://www.bonitasoft.com">Bonita Open
	  Solution</ulink> (BOS). The product is a <xref linkend="bib.bpmn2"/>
	  compliant <xref linkend="gle.bpm"/>-system featuring
	</para>

	<itemizedlist>
	  <listitem>
	    <para>
	      An interactive tool for modeling BPMN 2 diagrams
	    </para>
	  </listitem>

	  <listitem>
	    <para>
	      A Process engine accessible through a REST-API
	    </para>
	  </listitem>

	  <listitem>
	    <para>
	      User interfaces for the execution and administration of business
	      processes.
	    </para>
	  </listitem>
	</itemizedlist>
      </section>

      <section id="s.pawap.overview.hippo">
	<title>Web Application Framework</title>

	<para>
	  The collaborative activities that constitute the processes are
	  naturally distributed over distinct physical locations. Supporting
	  <emphasis>location</emphasis> distribution comes by itself with
	  the web. On the other hand, the User Interface of the same process
	  backed application will be distributed over many
	  <emphasis>channels</emphasis> (traditional web, mobile web,
	  intranet, possibly multi lingual channels, etc.). Multi channel
	  support is a distuinguishing factor for the web application
	  framework.
	</para>

	<para>
	  <emphasis>Hippo CMS</emphasis> is is an open-source Content
	  Management System (<xref linkend="gle.cms"/>) with a content
	  repository and functions for Data Interchange based on open
	  standars. It features a comprehensive Web Development Toolkit.
	</para>

	<para>	
	  The project was initiated and is maintained by the Duch company
	  <ulink url="http://www.onehippo.com">Hippo</ulink>. It is aimed at
	  at the needs of medium to large organisations for managing content
	  for (adapted) distribution on multiple channels like
	</para>
	<itemizedlist>
	  <listitem>
	    <para>
	      Web sites
	    </para>
	  </listitem>

	  <listitem>
	    <para>
	      Mobile sites
	    </para>
	  </listitem>

	  <listitem>
	    <para>
	      Intranets
	    </para>
	  </listitem>
	</itemizedlist>
      </section>
    </section>

    <section id="s.pawap.overview.orbeon">
      <title>State of the art Web Forms</title>

      <para>
      </para>

      <para>
	The manual process activities are mainly forms driven. The forms must
	be easy to use, easy to modify and with good functionality for
	efficient data validation and for accessibility adaptation.
      </para>

      <para>
	<ulink url="http://www.orbeon.com">Orbeon Forms</ulink> is an open
	source, standard-based web forms solution. The product features a
	responsive, high performance and flexible forms engine, readily
	integrateable with other software components. It includes the tool
	<emphasis>Form Builder</emphasis>, a <xref linkend="gle.wysiwyg"/>
	browser-based authoring tool for building state of the art web forms
	and <emphasis>Form Runner</emphasis>, a runtime environment for the
	deployment, integration and execution of large numbers of complex
	forms.
      </para>

      <para>
	Orbeon Forms is based on the <xref linkend="gle.xforms"/> standard
	which it provides a server side implementation of, and uses <xref
	linkend="gle.ajax"/> technologies, with no need for additional
	client-side software or plugins.
      </para>

      <para>
	The forms engine is built upon an  <xref linkend="gle.xrx"/> (<xref
	linkend="gle.xforms"/>,<xref linkend="gle.rest"/> and <xref
	linkend="gle.xquery"/>) architecture.
      </para>
    </section>

    <section id="s.pawap.overview-architecture">
      <title>The Big Picture</title>
      <figure id="im-human-comm">
	<title>The process and Forms engines working in concert with the CMS</title>
	<mediaobject>
	  <imageobject>
	    <imagedata scale="40" fileref="images/arch-overview.svg"/>
	  </imageobject>
	  <!--
	      <caption>
	      <para>..
	      </para>
	      </caption>
	  -->
	</mediaobject>
      </figure>

      <para>
      </para>
    </section>

    <section id="s.pawap.overview.added-value">
      <title>The Added Value of a Powerful Combination</title>

      <para>
	We have highlighted some essential requirements and functions
	necessary for the assembly of a productive,
	<emphasis>process-aware</emphasis> and web based application
	platform. Furhtermore, we have identified open source products that
	matches these requirements.
      </para>

      <para>
	Integration of these components/products constitutes an produtive
	platform for the creation of process-aware, flexible and adaptable web
	applications.
      </para>

      <para>
	When improving the processes in the natural BPM development cycle, in
	most cases the process diagram can be redeployed while web application
	logic can be left totally unmodified. In other cases the process might
	be left unmodified, while functionality in the web application is
	changed (e.g. addition of new channel).
      </para>
    </section>
  </section>

  <section id="s.dev-env">
    <title>Development Environment</title>
    <para>
      <!-- TODO -->
      This section describes how to set up an environment ready for
      development:
    </para>

    <itemizedlist>
      <listitem>
	<para>
	  Installation and configuration of run time environment and
	  development tools
	</para>
      </listitem>

      <listitem>
	<para>
	  Installation and configuration of databases: <xref
	  linkend="gle.postgresql"/> and <xref linkend="gle.existdb"/>
	</para>
      </listitem>

      <listitem>
	<para>
	  Installation of the Process and Forms Engines
	</para>
      </listitem>

      <listitem>
	<para>
	  Bootstrapping Hippo CMS installation, Check out and installation of 
	</para>
      </listitem>

      <listitem>
	<para>
	  Check out and installation of source code
	</para>
      </listitem>
    </itemizedlist>

    <para>
      A brief howto-guide for the development of web applications on the
      platform is provided in... <xref linkend="s.app-dev-on-pawap"/>.
    </para>
    
    <section id="s.dev-env.prereq">
      <title>Prerequisites</title>
      <para>
	Certain tools are mandatory for development on PAWAP. These include
	the Java Development Kit, Apache Maven, Eclipse IDE and Git. For
	preparing the development environment, follow the steps in
	<xref linkend="app.dev-rt-comp"/>.
      </para>

    </section>

    <section id="s.dev-env.bos">
      <title>Download, configure and start the Process Engine</title>

      <!-- 
	   TODO: include config ow REST services in the description below
	   <para>
	   Running BOS server with Inherit's additional REST services
	   <programlisting>
	   scp -P 2212 adminherit@pluto.inherit.se:_
	   ./inherit-platform-server-components/inherit-platform-BOS-5.6.1-Tomcat-6.0.33.tgz .
	   tar xzf inherit-platform-BOS-5.6.1-Tomcat-6.0.33.tgz
	   cd BOS-5.6.1-Tomcat-6.0.33/bin
	   ./starup.sh
	   ./tail -f ../logs/catalina.out
	   </programlisting>
	   </para>
      -->

      <para>
	The process engine acts as the central coordinator when the
	process-aware  applications are running. It keeps track of the tasks of the
	various process instances, and allocates those that are ready for
	execution to the appropirate users (or groups of users belonging to
	different roles). The development environment needs a running process
	engine for developing and testing the process-aware web
	applications. The process engine is accessed via a <xref
	linkend="gle.rest"/> interface.
      </para>

      <para>
	<xref linkend="app.bos-config"/> describes how to install and
	configure the process engine with PostgreSQL as back-end.
      </para>
    </section>

    <section id="s.dev-env.orbeon">
      <title>Download, configure and start the Forms Engine</title>
      <para>
	The forms engine is the main data collection component for the human
	tasks of the busines process. Dedicated forms are presented when
	starting a new process, and in general for each human task.
      </para>

      <para>
	<xref linkend="app.orbeon"/> describes how to install and configure
	the forms engine.
      </para>
    </section>

    <section id="s.checkout.code">
      <title>Check out the source code</title>
      <para>
	Assuming that the Eclipse workspace resides in $HOME/workspace, go to
	that directory and check out the code:
	<programlisting>
	  cd ~/workspace/
	  git clone gitosis@pluto.inherit.se:inherit-platform.git
	</programlisting>
      </para>
    </section>

    <section id="s.import.eclipse">
      <title>Import project to Eclipse</title>
      <para>
	<itemizedlist>
	  <listitem>
	    <para>
	      Start Eclipse and choose menu "File->Import...".
	    </para>
	  </listitem>

	  <listitem>
	    <para>
	      Select "Maven->Existing Maven Projects" and click next.
	    </para>
	  </listitem>

	  <listitem>
	    <para>
	      Select root directory "inherit-platform" and finish import.
	    </para>
	  </listitem>
	</itemizedlist>
      </para>
    </section>

    <section id="s.build_inherit.platform">
      <title>Build PAWAP</title>
      <para>
	The previous step created a directory, inherit-platform, relative to
	the Eclipse workspace ($HOME/workspace). Issue the following commands:
      </para>
      <programlisting>
	cd inherit-platform
	mvn clean install
      </programlisting>
    </section>

    <section id="s.app-dev-on-pawap">
      <title>Development on PAWAP</title>
      <para>
	...
      </para>
    </section>
  </section>

  <section id="s.prod-depl">
    <title>Production Deployment</title>
    <para>
      This section describes how to set up an environment ready for
      production. This implies:
    </para>

    <itemizedlist>
      <listitem>
	<para>
	  Installation and configuration of run time environment
	</para>
      </listitem>

      <listitem>
	<para>
	  Installation of the Process and Forms Engines
	</para>
      </listitem>

      <listitem>
	<para>
	  Hippo CMS and Content Repository installation
	</para>
      </listitem>

      <listitem>
	<para>
	  Check out and installation of source code
	</para>
      </listitem>
    </itemizedlist>

    <section id="s.prod-depl.prereq">
      <title>Prerequisites</title>
      <para>
	In the production environment we need the Java Development Kit, and
	Apache Maven.  In order to install these, follow the corresponding
	steps in <xref linkend="s.dev-rt-comp.java"/>, <xref
	linkend="s.dev-rt-comp.mvn"/>.
      </para>
    </section>

    <section id="s.prod-depl.bos">
      <title>Download, configure and start the Process and Forms Engines</title>

      <para>
	The installation is the same as for the develpment server: <xref
	linkend="app.bos-config"/> and 	<xref linkend="app.orbeon"/> respectively. 
      </para>
    </section>
    <section id="s.server.pre-req-hippo-jcr">
      <title>Hippo content repository</title>
      <para>
	Download latest version of inherit-portal's content repository.
      </para>

      <programlisting>
	scp -P 2212 adminherit@pluto.inherit.se:_
	./inherit-platform-server-components/jcr-inherit-portal.tgz .
	tar xzf jcr-inherit-portal.tgz
      </programlisting>
    </section>
    <section id="s.deploy.server">
      <title>Deploy on Server</title>
      <programlisting>
	cd inherit-platform
	mvn clean install
	cd inherit-portal
	mvn -P dist
      </programlisting>

      <itemizedlist>
	<listitem>
	  <para>
	    Copy
	    inherit-platform/inherit-bonita-rest-server-custom/target/inherit-bonita-rest-server-custom-1.0-SNAPSHOT.war
	    to demo-vm's
	    /opt/inherit-platform/BOS-5.6.1-Tomcat-6.0.33/webapps/
	  </para>
	</listitem>

	<listitem>
	  <para>
	    tar xzf inherit-platform/inherit-portal/target/inherit-portal-1.01.00-SNAPSHOT-distribution.tar.gz to demo vm's /opt/inherit-platform/apache-tomcat-6.0.35 
	  </para>
	</listitem>
      </itemizedlist>
    </section>
    
    <section id="s.apache2.front">
      <title>Install and configure Apache2 front</title>
      <programlisting>
	sudo apt-get install apache2
	sudo a2enmod proxy_ajp
      </programlisting>

      <para>
	Create config file /etc/apache2/sites-available/XXXXXX Run a2ensite
	and restart/reload apache2 in order to activate the site config:
      </para>

      <programlisting>
	sudo a2ensite XXXXXX
	sudo service apache2 restart
      </programlisting>
    </section>

  </section>

  <glossary id="glossary">
    <glossentry id="gle.ajax">
      <glossterm><acronym>AJAX</acronym></glossterm>
      <glossdef>
	<para>
	  <ulink
	      url="http://en.wikipedia.org/wiki/Ajax_(programming)">Ajax</ulink>
	  is an acronym for Asynchronous JavaScript and XML. It is a set of
	  client-side web development techniques used on the to create
	  responsive web applications. The main idea is to let interaction
	  with a web page trigger asynchronous calls to the server with a
	  local focus on the web page, and to update only the parts of the web
	  page that are affected when the result arrives. In the meantime the
	  user can iteract with the web page. The result is a more responsive
	  user experience.
	</para>
	<para>
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.bpm">
      <glossterm><acronym>BPM</acronym></glossterm>
      <glossdef>
	<para>
	  <ulink url="http://en.wikipedia.org/wiki/Business_process_management">
	    Business Process Management
	  </ulink>
	</para>
	
	<para>
	  A method whereby business processes are under continuous improvement
	  by undergoing a life cycle of design, modeling, execution,
	  monitoring and optimization. BPM can also include tools for
	  <emphasis>simulating</emphasis> processes &mdash; a method for "dry
	  running" processes based on estimated (and/or previously collected
	  input data) in order to analyze process performance.
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.cms">
      <glossterm><acronym>CMS</acronym></glossterm>
      <glossdef>
	<para>
	  A 
	  <ulink url="http://en.wikipedia.org/wiki/Content_management_system">
	    Content management System</ulink> is a software system for
	    structuring, creating, editing and publishing <emphasis>digital
	    content</emphasis>. It also normally features function for
	    collaborative (work flow) and user administration.
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.existdb">
      <glossterm>exist-db</glossterm>
      <glossdef>
	<para>
	  <ulink url="http://www.exist-db.org/">eXist-db</ulink> is an open
	  source database management system built using XML technology. It
	  stores XML data according to the XML data model and features
	  efficient, index-based XQuery processing.
	</para>

	<para>
	  It implements the majority of the SQL:2008 standard, is
	  ACID-compliant, is fully transactional , has extensible data types,
	  operators, index methods, functions, aggregates, procedural
	  languages, and has a large number of extensions written by third
	  parties.
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.gnu">
      <glossterm><acronym>GNU</acronym></glossterm>
      <glossdef>
	<para>
	  <ulink
	      url="http://www.gnu.org/">GNU...</ulink>
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.ide">
      <glossterm><acronym>IDE</acronym></glossterm>
      <glossdef>
	<para>
	  Integrated Development Environment
	</para>
	<para>
	  Programming tool aimed at enhancing programming productivity by
	  tying together other tools in the programming tool chain such as
	  syntax sensitive program editors, compilers and debuggers.
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.agpl">
      <glossterm><acronym>AGPL</acronym></glossterm>
      <glossdef>
	<para>
	  <ulink
	      url="http://www.gnu.org/licenses/agpl-3.0.html">GNU Affero GPL
	  </ulink>
	  ...
	</para>
      </glossdef>
    </glossentry>


    <glossentry id="gle.alv2">
      <glossterm><acronym>APL</acronym></glossterm>
      <glossdef>
	<para>
	  <ulink url="http://www.apache.org/licenses/LICENSE-2.0">
	    Apache License, Version 2.0
	  </ulink>
	  ...
	</para>
      </glossdef>
    </glossentry>


    <glossentry id="gle.gplv2">
      <glossterm><acronym>GPLv2</acronym></glossterm>
      <glossdef>
	<para>
	  <ulink url="http://www.gnu.org/licenses/gpl-2.0.html">
	    GNU General Public License, version 2
	  </ulink>
	  ...
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.lgplv2">
      <glossterm><acronym>LGPLv2</acronym></glossterm>
      <glossdef>
	<para>
	  <ulink url="http://www.gnu.org/licenses/lgpl-2.1.html">
	    GNU Lesser General Public License, version 2.1
	  </ulink>
	  ...
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.loose-coupling">
      <glossterm>Loose Coupling</glossterm>
      <glossdef>
	<para>
	  <ulink url="http://en.wikipedia.org/wiki/Loose_coupling">Loose Coupling</ulink>
	  ...
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.mvc">
      <glossterm>MVC</glossterm>
      <glossdef>
	<para>
	  <ulink url="http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller">MVC</ulink>
	  Model/View/Controller...
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.omg">
      <glossterm><acronym>OMG</acronym></glossterm>
      <glossdef>
	<para>
	  <ulink url="http://www.omg.org">Object Management Group</ulink>
	</para>
	<para>
	  An industry consortium aimed at setting standards for modelling and
	  distributed object oriented technology. The de facto standard for OO
	  design, UML, is managed by OMG, as well as the Model Driven
	  Architecture initiative.
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.osi">
      <glossterm><acronym>OSI</acronym></glossterm>
      <glossdef>
	<para>
	  <ulink url="http://opensource.org/">Open Source Initiative</ulink>
	</para>
	<para>
	  The Open Source Initiative (OSI) is a non-profit corporation with
	  global scope formed to educate about and advocate for the benefits
	  of open source. It also acts as a standards body, maintaining the
	  <ulink url="http://opensource.org/osd/">Open Source Definition</ulink>
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.postgresql">
      <glossterm>PostgreSQL</glossterm>
      <glossdef>
	<para>
	  <ulink url="http://www.postgresql.org/">PostgreSQL</ulink> is an
	  advanced object-relational database management system (ORDBMS)
	  available for many platforms. It is free and open source software.
	</para>

	<para>
	  It implements the majority of the SQL:2008 standard, is
	  ACID-compliant, is fully transactional , has extensible data types,
	  operators, index methods, functions, aggregates, procedural
	  languages, and has a large number of extensions written by third
	  parties.
	</para>
      </glossdef>
    </glossentry>


    <glossentry id="gle.rest">
      <glossterm><acronym>REST</acronym></glossterm>
      <glossdef>
	<para>
	  <!-- TODO references, urls -->
	  REpresentational State Transfer
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.separation-of-concerns">
      <glossterm>SoC</glossterm>
      <glossdef>
	<para>
	  <ulink
	      url="http://en.wikipedia.org/wiki/Separation_of_concerns">Separation
	  of Concerns</ulink>...
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.w3c">
      <glossterm><acronym>W3C</acronym></glossterm>
      <glossdef>
	<para>
	  <ulink url="http://www.w3.org">World Wide Web Consortium</ulink>
	</para>
	<para>
	  The World Wide Web Consortium (W3C) is an international community
	  that develops open Web standards to ensure the long-term growth of
	  the Web. The consortium maintains the central standards driving the
	  web, such as HTTP, HTML, and also those defining the <ulink
	  url="http://www.w3.org/2001/sw/">Semantic Web</ulink>.
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.wysiwyg">
      <glossterm><acronym>WYSIWYG</acronym></glossterm>
      <glossdef>
	<para>
	  <ulink url="http://en.wikipedia.org/wiki/WYSIWYG">What You See Is
	  What You Get</ulink>: A user interface for designing layouts that
	  that presents to the user a view that closely resembles the end
	  result.
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.xforms">
      <glossterm><acronym>Xforms</acronym></glossterm>
      <glossdef>
	<para>
	  <xref linkend="bib.xforms1-1"/> is an XML format for the
	  specification of a data processing model for XML data and user
	  interface(s) for the XML data, such as web forms. XForms is intended
	  to be integrated into other markup languages, such as XHTML, ODF or
	  SVG.
	</para>

	<para>
	  XForms was designed to be the next generation of HTML / XHTML forms,
	  but can also be used in a standalone manner or with presentation
	  languages other than XHTML to describe a user interface and a set of
	  common data manipulation tasks.
	</para>

	<para>	
	  The creators of XForms have adopted an <xref linkend="gle.mvc"/>
	  approach. The model consists of one or more XForms models describing
	  form data, constraints upon that data, and submissions. The view
	  describes what controls appear in the form, how they are grouped
	  together, and what data they are bound to. CSS can be used to
	  describe a form's appearance.
	</para>

	<para>
	  Among the feature highlights of XForms are

	  <itemizedlist>
	    <listitem>
	      <para>
		strong data type validation
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		form component reuse
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		elimination of unnecessary round-trips to the server
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		device independence
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		reduction of the need for scripting
	      </para>
	    </listitem>
	  </itemizedlist>
	</para>

	<para>
	  The original XForms specification became an official <ulink
	  url="http://www.w3.org">W3C</ulink> Recommendation in 2003, while
	  <xref linkend="bib.xforms1-1"/>, which introduced a
	  number of improvements, reached the same status in 2009. A further
	  improved version, <ulink url="http://www.w3.org/TR/xforms20/">XForms
	  2.0</ulink> is forthcoming.
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.xquery">
      <glossterm><acronym>XQuery</acronym></glossterm>
      <glossdef>
	<para>
	  <!--TODO-->
	</para>
	<para>
	  The original XQuery specification became an official <ulink
	  url="http://www.w3.org">W3C</ulink> Recommendation in 2003, while
	  <xref linkend="bib.xforms1-1"/> XForms 1.1, which introduced a number of improvements, reached the
	  same status in 2009.
	</para>
      </glossdef>
    </glossentry>

    <glossentry id="gle.xrx">
      <glossterm><acronym>XRX</acronym></glossterm>
      <glossdef>
	<para>
	  <!--TODO-->
	</para>

	<para>
	  XForms/REST/XQuery...
	</para>

      </glossdef>
    </glossentry>
  </glossary>

  <bibliography id="sec.bibliography">
    <title>Bibliografi</title>
    
    <biblioentry id="bib.bpmn2">
      <abbrev id="bib.bpmn2.abbrev">BPMN 2.0</abbrev>

      <authorgroup>
	<author><othername>OMG</othername></author>
	<editor>
	  <firstname>
	  </firstname>
	  <surname></surname>
	  <affiliation>
	    <orgname>
	    </orgname>
	  </affiliation>
	</editor>
      </authorgroup>
      
      <pubdate>2011</pubdate>
      <title>
	<ulink url="http://www.omg.org/spec/BPMN/2.0/">
	  Business Process Model and Notation (BPMN) Version 2.0
	</ulink>
      </title>
    </biblioentry>
    
    <biblioentry id="bib.xforms1-1">
      <abbrev id="bib.xforms.abbrev">XForms 1.1</abbrev>

      <authorgroup>
	<author><othername>World Wide Web Consortium</othername></author>
	<editor>
	  <firstname>John
	  </firstname>
	  <surname>Boyer</surname>
	  <affiliation>
	    <orgname>IBM
	    </orgname>
	  </affiliation>
	</editor>
      </authorgroup>

      <pubdate>2009</pubdate>
      <title>
	<ulink url="http://www.w3.org/TR/xforms11/">XForms 1.1 W3C
	Recommendation</ulink>
      </title>
    </biblioentry>
    
    <biblioentry id="bib.xpath">
      <abbrev id="bib.xpath.abbrev">XPath</abbrev>

      <authorgroup>
	<author><othername>World Wide Web Consortium</othername></author>
	<editor>
	  <firstname></firstname>
	  <surname></surname>
	  <affiliation>
	    <orgname></orgname>
	  </affiliation>
	</editor>
      </authorgroup>
      
      <pubdate>2010</pubdate>
      <title>
	<ulink url="http://www.w3.org/TR/xpath20/">
	  XPath 2.0 W3C Recommendation
	</ulink>
      </title>
    </biblioentry>

    <biblioentry id="bib.xquery">
      <abbrev id="bib.xquery.abbrev">XQuery</abbrev>

      <authorgroup>
	<author><othername>World Wide Web Consortium</othername></author>
	<editor>
	  <firstname></firstname>
	  <surname></surname>
	  <affiliation>
	    <orgname></orgname>
	  </affiliation>
	</editor>
      </authorgroup>
      
      <pubdate>2010</pubdate>
      <title>
	<ulink url="http://www.w3.org/TR/xquery/">
	  XQuery 1.0: An XML Query Language (Second Edition)
	</ulink>
      </title>
    </biblioentry>

  </bibliography>

  <appendix id="app.dev-rt-comp">
    <title>Development and Runtime Components</title>

    <section id="s.dev-rt-comp.java">
      <title>
	Java
      </title>

      <para>
	PAWAP is developed and runs in a Server Side Java (JEE)
	Ecosystem.
      </para>
      
      <para>
	The JDK (Java Development Kit) used is <ulink
	url="http://www.oracle.com/technetwork/java/javase/overview/index.html">Oracle
	JDK version 1.6</ulink>. Make sure this JDK is installed on your
	machine, and verify that the environment variable JAVA_HOME is set,
	either system wide, or by adding it to the appropriate init script,
	e.g.:
	<programlisting>
	  export JAVA_HOME=/usr/lib/jvm/java-6-sun
	</programlisting>
      </para>

      <note>
	<simpara>
	  The licensing of this JDK is not open source compatible. Some
	  of the program components of PAWAP require the Oracle JDK
	  rather than OpenJDK) (We expect this problem to be solved in
	  the near future, when all components are expected to be
	  compatible with <ulink url="http://openjdk.java.net/">OpenJDK
	  7</ulink>
	</simpara>
      </note>

    </section>

    <section id="s.dev-rt-comp.posgtresql">
      <title>
	PostgreSQL
      </title>
      <para>
      </para>

      <section id="s.dev-rt-comp.posgtresql.install">
	<title>
	  Installation
	</title>
	<para>
	  Ubuntu Server 12.04:
	</para>
	<programlisting>
	  apt-get install postgresql-9.1
	</programlisting>
      </section>

      <section id="s.dev-rt-comp.posgtresql.config">
	<title>
	  Configuration
	</title>
	<para>
	  ...
	</para>
	  <!--
	      <programlisting></programlisting>
	  -->
      </section>

    </section>

    <section id="s.dev-rt-comp.mvn">
      <title>
	Apache Maven 
      </title>
      <para>
	<ulink url="http://maven.apache.org/">Apache Maven</ulink> is used for
	managing the build and testing environment. The platform is built
	using Maven 2.2.1, and Maven must be installed on the development
	machine.
      </para>
    </section>

    <section id="s.dev-rt-comp.eclipse">
      <title>
	Eclipse
      </title>
      <para>
	<ulink url="http://www.eclipse.org">Eclipse</ulink> is used as <xref
	linkend="gle.ide"/>. Eclipse comes in many different pre packaged
	bundles. Choose the bundle: <ulink
	url="http://www.eclipse.org/downloads/packages/eclipse-ide-java-ee-developers/junosr1">Eclipse
	IDE for Java EE Developers</ulink>.
      </para>

      <para>
	The Eclipse development environment is integrated with Maven through
	the Maven plugin <ulink
	url="http://www.eclipse.org/m2e/">m2e</ulink> (Maven 2 Eclipse
	Integration). For installation information, refer to the <ulink
	url="http://www.eclipse.org/m2e/download/">Eclipse Maven Plugin
	Download Site</ulink>.
      </para>
    </section>

    <section id="s.dev-rt-comp.git">
      <title>
	Source code repository and version/configuration management
      </title>

      <para>
	For this purpose, <ulink url="http://git-scm.com/">GIT
	(v. 1.7.9.5)</ulink> is used. The source code repository is located
	at: pluto.inherit.se:inherit-platform.git Cf. <xref
	linkend="s.checkout.code"/> for instructions on how to check out the
	source code of PAWAP.
      </para>
    </section>
  </appendix>

  <appendix id="app.bos-config">
    <title>
      Installation and Configuration of BOS-Tomcat bundle with PostgreSQL
    </title>

    <para>
      ...
    </para>

    <section id="app.s.bos-config.download">
      <title>Download Tomcat/Bonita bundle</title>
      <para>
	Download bundle from <ulink
	url="http://www.bonitasoft.com/products/BPM_downloads/all">Bonita
	download area</ulink>. The downloaded file is zip-compressed.
      </para>
      <para>
	Unzip into directory of choice. If the global variables CATALINA_HOME
	and CATALINA_BASE are not set, they will be set to this directory. If
	for some reason one wants to override these default values, this is
	done in the script
	<programlisting>
	  bin/setcatalina_home.sh
	</programlisting>
	which in turn is read from
	<programlisting>
	  bin/startup.sh
	</programlisting>
      </para>

      <para>
	Configure the port number the server will be running on to 58080.
      </para>
    </section>

    <section id="app.s.bos-config.postgresql-data-sources">
      <title>Changes to Data Source Configuration</title>
      <para>
	The default data source configuration uses the file based DBMS H2.
	To change this to PostgreSQL, locate $CATALINA_HOME/conf/context.xml
	and apply the following changes to this file:
      </para>

      <para>	
	Comment out default Resource tags (configured for use with H2)  with name
      </para>

      <para>
	<programlisting>
	  "bonita/default/history" and
	  "bonita/default/journal"
	</programlisting>
	and replace with the following resources:
	<programlisting>
	  &lt;Resource name="bonita/default/history"  
	  auth="Container"  
	  type="javax.sql.DataSource" 
	  maxActive="100"  
	  minIdle="10"  
	  maxWait="10000"  
	  initialSize="1" 
	  maxPoolSize="15" 
	  minPoolSize="3"
	  maxConnectionAge="0"
	  maxIdleTime="1800"
	  maxIdleTimeExcessConnections="120"
	  idleConnectionTestPeriod="30"
	  acquireIncrement="3"
	  testConnectionOnCheckout="true"
	  removeAbandoned="true" 
	  logAbandoned="true" 
	  username="bonita" 
	  password="bpm"
	  driverClassName="org.postgresql.Driver"
	  url="jdbc:postgresql://localhost:5432/bonita_history?dontTrackOpenResources=true"/&gt;

	  &lt;Resource name="bonita/default/journal"  
	  auth="Container"  
	  type="javax.sql.DataSource" 
	  maxActive="100"  
	  minIdle="10"  
	  maxWait="10000"  
	  initialSize="1" 
	  maxPoolSize="15" 
	  minPoolSize="3"
	  maxConnectionAge="0"
	  maxIdleTime="1800"
	  maxIdleTimeExcessConnections="120"
	  idleConnectionTestPeriod="30"
	  acquireIncrement="3"
	  testConnectionOnCheckout="true"
	  removeAbandoned="true" 
	  logAbandoned="true" 
	  username="bonita" 
	  password="bpm"
	  driverClassName="org.postgresql.Driver" 
	  url="jdbc:postgresql://localhost:5432/bonita_journal?dontTrackOpenResources=true"/&gt;
	</programlisting>
      </para>
    </section>

    <section id="s.app.bos-config.postgresql-bonita-server">
      <title>Changes to bonita server property files</title>
      <para>
	Locate the directory $CATALINA_HOME/bonita/server/default.  In this
	directory, there are two property files, bonita-journal.properties,
	and bonita-history.properties that need changes in order to work
	with PostgreSQL.
      </para>

      <para>
	In bonita-journal.properties, apply the following patch:
      </para>

      <para>
	<programlisting>
	  17c17
	  &lt; hibernate.dialect                        org.hibernate.dialect.H2Dialect
	  ---
	  &gt; # hibernate.dialect                        org.hibernate.dialect.H2Dialect
	  20c20,25
	  &lt; bonita.hibernate.interceptor             org.ow2.bonita.env.interceptor.H2DescNullFirstInterceptor
	  ---
	  &gt; # bonita.hibernate.interceptor             org.ow2.bonita.env.interceptor.H2DescNullFirstInterceptor
	  &gt; 
	  &gt; # POSTGRESQL 
	  &gt; hibernate.dialect org.hibernate.dialect.PostgreSQLDialect
	  &gt; hibernate.connection.driver_class org.postgresql.Driver 
	  &gt; hibernate.connection.url jdbc:postgresql://localhost:5432/bonita_history
	</programlisting>
      </para>

      <para>
	In bonita-history.properties, apply the following (actually same) patch:
      </para>
      <para>
	<programlisting>
	  17c17
	  &lt; hibernate.dialect                        org.hibernate.dialect.H2Dialect
	  ---
	  &gt; # hibernate.dialect                        org.hibernate.dialect.H2Dialect
	  20c20,25
	  &lt; bonita.hibernate.interceptor             org.ow2.bonita.env.interceptor.H2DescNullFirstInterceptor
	  ---
	  &gt; # bonita.hibernate.interceptor             org.ow2.bonita.env.interceptor.H2DescNullFirstInterceptor
	  &gt; 
	  &gt; # POSTGRESQL 
	  &gt; hibernate.dialect org.hibernate.dialect.PostgreSQLDialect
	  &gt; hibernate.connection.driver_class org.postgresql.Driver 
	  &gt; hibernate.connection.url jdbc:postgresql://localhost:5432/bonita_history
	</programlisting>
      </para>
    </section>

    <section id="s.app.bos-config.postgresql">
      <title>PostgreSQL Configuration</title>
      <para>
	Create user bonita with all rights, and with password according to settings in
	<xref linkend="app.s.bos-config.postgresql-data-sources"/>.
      </para>
    </section>

    <section id="s.app.bos-config.postgresql.jdbc-driver">
      <title>Install PostgreSQL JDBC driver</title>
      <para>
	Locate or download postgresql-9.1-901.jdbc4.jar or later and copy
	into $CATALINA_HOME/lib
      </para>
    </section>

    <section id="s.app.bos-config.tomcat-postgres-start">
      <title>Start server</title>
      <para>
	Now server is ready to be started by running
	$CATALINA_HOME/bin/startup.sh
      </para>
    </section>
  </appendix>

  <appendix id="app.orbeon">
    <title>Install, configure and start Orbeon Forms</title>
    <!-- 
	 TODO:...
    -->

    <para>
      The forms engine is accessed via a <xref
      linkend="gle.rest"/> interface.
    </para>

    <para>
      The following steps describes how to install and configure the forms
      engine Orbeon with <xref linkend="gle.existdb"/> as back-end.
    </para>

    <section id="app.s.orbeon-prereq">
      <title>Prerequisites</title>
      <para>
	Download bundle from <ulink url="">Orbeon download area</ulink>. The
	downloaded file is ...
      </para>
    </section>

    <section id="app.s.orbeon-install">
      <title>Installation</title>
      <para>
	Perform the base install of Orbeon Forms as explained in the
	<ulink
	    url="http://wiki.orbeon.com/forms/doc/developer-guide/admin/installing">Orbeon
	Forms Wiki</ulink>
      </para>

      <para>
	Perform the initial checks and preparations and go on to the section
	for installing on Apache Tomcat. The base installation consists
	mainly of extracting the downloaded orbeon.jar file to the directory
	$TOMCAT_HOME/webapps
      </para>

      <para>
	The result is a directory, webapps/orbeon.
      </para>

      <para>
	Configuring Orbeon consists mainly of defining or overriding
	configuration properties according to <ulink
	url="http://wiki.orbeon.com/forms/doc/developer-guide/configuration-properties">the
	the section of configuration proerties</ulink> in the Orbeon Forms
	Developer's Guide.
      </para>

      <para>
	In the directory
	$TOMCAT_HOME/webapps/orbeon/WEB-INF/resources/config, there is a
	file properties-local.xml. This file is for definition of new
	properties or overrriding standard values of predefined
	properties. The properties in this file are explained, where not
	obvious, in a comment immediately preceding the comment.
      </para>
    </section>

    <section id="app.s.orbeon-existdb">
      <title>Configure the Exist database</title>
      <para>
	To configure Orbeon for use with the <xref linkend="gle.existdb"/>,
	follow the <ulink
	url="http://wiki.orbeon.com/forms/doc/developer-guide/exist-configuration">instructions</ulink>
	Orbeon in the Orbeon Forms Developer's Guide.
      </para>
    </section>

    <section id="app.s.orbeon-start">
      <title>Start server</title>
      <para>
	Configure the port number of the server to 48080.
      </para>

      <para>
	Now server is ready to be started by running
	$CATALINA_HOME/bin/startup.sh
      </para>
    </section>
  </appendix>

  <appendix id="app.souce-code-overview">
    <title>Source Code Overview</title>
    <section id="app.s.src-inherit-portal">
      <title>inherit-portal</title>
      <para>
	inherit-portal is a HippoCMS maven project with Hippo's subprojects
	
	<itemizedlist>
	  <listitem>
	    <para>
	      inherit-portal-site
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      inherit-portal-cms
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      inherit-portal-content
	    </para>
	  </listitem>
	</itemizedlist>	
      </para>
    </section>      

    <section id="app.s.src-inherit-security">
      <title>inherit-security</title>
      <para>
	JAAS module etc. TODO!
      </para>
    </section>

    <section id="app.s.src-inherit-service">
      <title>inherit-service</title>
      <para>
	Inherit Service is inherit-platform's service layer. Currently, the
	inherit-service-rest-server war file is the way to deploy
	inherit-service. inherit-service-rest-client is an implementation to
	integrate with Inherit Service.
      </para>
      
      <section id="app.s.src.inherit-service-common">
	<title>inherit-service-common</title>
	<para>
	  Contains inherit-service common classes used by the
	  subprojects. Furhermore, this project contains neccessary POJOs to
	  integrate with Inherit Service.
	</para>
      </section>
      
      <section id="app.s.src.inherit-service-core">
	<title>inherit-service-core</title>
	<para>
	  Implementation of core functionality (not yet in use)
	</para>
      </section>

      <section id="app.s.src.inherit-service-rest-server">
	<title>inherit-service-rest-server</title>
	<para>
	  This projects builds a deployable war with a REST exposed
	  inherit-service.  The intention is that this project only is a glue
	  to publish Inherit Service with a REST interface.
	</para>
      </section>

      <section id="app.s.src.inherit-service-rest-client">
	<title>inherit-service-rest-client</title>
	<para>
	  This is a ready to use implementation of a REST client 
	  to call inherit-service-rest-server.
	</para>
      </section>

      <section id="app.s.src.inherit-service-taskform-engine">
	<title>inherit-service-taskform-engine</title>
	<para>
	  This engine keeps track of tasks to perform. A task can exist in the BPM 
	  engine and be partially filled in start forms...
	</para>
      </section>

      <section id="app.s.src.inherit-service-bonita-client-utils">
	<title>inherit-service-bonita-client-utils</title>
	<para>
	  Utilities to integrate with Bonita Open Solution.
	</para>
      </section>
    </section>
  </appendix>
</article>
