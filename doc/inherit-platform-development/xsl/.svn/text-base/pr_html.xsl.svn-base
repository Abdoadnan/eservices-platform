<?xml version='1.0'?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                version='1.0'
                xmlns="http://www.w3.org/TR/xhtml1/transitional"
                exclude-result-prefixes="#default">

<!-- <xsl:import href="docbook.xsl"/> -->
<!-- <xsl:import href="/home/rol/docbook/docbook-xsl-1.60.1/xhtml/docbook.xsl"/> -->
<xsl:import href="/usr/share/xml/docbook/stylesheet/nwalsh/xhtml/docbook.xsl"/>


<!-- Add other variable definitions here -->

<!-- 
     <xsl:variable name="toc.section.depth">3</xsl:variable>
     <xsl:variable name="generate.section.toc.level">1</xsl:variable> 
     <xsl:param name="section.label.includes.component.label" select="1"/>
-->

<xsl:output method="xml" encoding="utf-8" indent="no" doctype-public="-//W3C//DTD XHTML 1.0 Transitional//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"/>

<!--  <xsl:param name="use.extensions" select="1"/> only use this with saxon processor 
       when you want generation of callouts -->
<xsl:param name="section.autolabel" select="1"/>
<xsl:param name="html.stylesheet" select="'presentation.css'"/>
<xsl:param name="toc.section.depth">4</xsl:param>
<xsl:param name="bibliography.style">iso690</xsl:param>
<!--<xsl:param name="bibliography.style">normal</xsl:param>-->

<xsl:param name="formal.title.placement">
  figure after
  example after
  equation after
  table after
  procedure after
</xsl:param>

<!--<xsl:param name="ignore.image.scaling">1</xsl:param>-->
<xsl:param name="ignore.image.scaling" select="1"/>


<!--
<xsl:template match="varlistentry">
  <dt>
    <xsl:call-template name="anchor"/>
    <xsl:apply-templates select="term"/>
  </dt>
  <dd>
    <xsl:apply-templates select="listitem"/>
  </dd>
</xsl:template>
-->


<xsl:template match="abstract/para">
  <p><b xmlns="http://www.w3.org/1999/xhtml"><xsl:apply-templates/></b></p>
</xsl:template>

<xsl:template match="varlistentry/listitem/para">
  <!-- see also listitem/simpara in lists.xsl -->
    <xsl:if test="@role and $para.propagates.style != 0">
      <xsl:attribute name="class">
        <xsl:value-of select="@role"/>
      </xsl:attribute>
    </xsl:if>

    <xsl:call-template name="anchor"/>
    <xsl:apply-templates/>
</xsl:template>

<xsl:template match="appendix/section" mode="xref-to">
  <xsl:param name="referrer"/>
  <xsl:param name="xrefstyle"/>
  <xsl:param name="verbose" select="1"/>
  <xsl:variable name="poschar">
    <xsl:choose>
      <xsl:when test="count(parent/preceding-sibling::*)+1=1">
	<xsl:text>A</xsl:text>
      </xsl:when>
      <xsl:when test="count(parent/preceding-sibling::*)+1=2">
	<xsl:text>B</xsl:text>
      </xsl:when>
      <xsl:when test="count(parent/preceding-sibling::*)+1=3">
	<xsl:text>C</xsl:text>
      </xsl:when>
      <xsl:when test="count(parent/preceding-sibling::*)+1=4">
	<xsl:text>D</xsl:text>
      </xsl:when>
      <xsl:otherwise>
	<xsl:text>???</xsl:text>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>
  <xsl:text>Appendix </xsl:text>
  <!--  <xsl:value-of select="count(parent/preceding-sibling::*)+1"/>-->
  <xsl:value-of select="$poschar"/>
  <xsl:text>, </xsl:text>
  <xsl:apply-templates select="." mode="object.xref.markup">
    <xsl:with-param name="purpose" select="'xref'"/>
    <xsl:with-param name="xrefstyle" select="$xrefstyle"/>
    <xsl:with-param name="referrer" select="$referrer"/>
    <xsl:with-param name="verbose" select="$verbose"/>
  </xsl:apply-templates>
  <!-- FIXME: What about "in Chapter X"? -->
</xsl:template>



</xsl:stylesheet>
